@use 'sass:map';

$size-spacing-15: 9.5rem; // 152px.
$size-spacing-14: 7.5rem; // 120px.
$size-spacing-13: 6.5rem; // 104px.
$size-spacing-12: 6rem; // 96px.
$size-spacing-11: 5.5rem; // 88px.
$size-spacing-10: 5rem; // 80px.
$size-spacing-9: 4.5rem; // 72px.
$size-spacing-8: 4rem; // 64px.
$size-spacing-7: 3.5rem; // 56px.
$size-spacing-6: 3rem; // 48px.
$size-spacing-5: 2.5rem; // 40px.
$size-spacing-4: 2rem; // 32px.
$size-spacing-3: 1.5rem; // 24px.
$size-spacing-2: 1rem; // 16px.
$size-spacing-1: 0.5rem; // 8px.
$spacings: (
  9.5: $size-spacing-15,
  7.5: $size-spacing-14,
  6.5: $size-spacing-13,
  6: $size-spacing-12,
  5.5: $size-spacing-11,
  5: $size-spacing-10,
  4.5: $size-spacing-9,
  4: $size-spacing-8,
  3.5: $size-spacing-7,
  3: $size-spacing-6,
  2.5: $size-spacing-5,
  2: $size-spacing-4,
  1.5: $size-spacing-3,
  1: $size-spacing-2,
  0.5: $size-spacing-1,
);

@function space($item) {
  @if map-has-key($map: $spacings, $key: $item) {
    @return map.get($spacings, $item);
  } @else {
    /* stylelint-disable-next-line at-rule-no-unknown */
    @error 'space(#{$item}); does not exist in the $spacings map. See _spacing.scss for available parameters.';
  }
}

// default state is padding-top and padding-bottom
// set $top to false if no top spacing is needed
// set $bottom to false if no bottom spacing is needed
// set $padding to false if margin should be used instead
@mixin macro-spacing-block($top: true, $bottom: true, $padding: true) {
  @if $top {
    @if $padding {
      padding-top: px2rem(28);

      @include small {
        padding-top: px2rem(32);
      }

      @include large {
        padding-top: px2rem(44);
      }

      @include xl {
        padding-top: px2rem(52);
      }

      @include xxxl {
        padding-top: space(4.5);
      }
    } @else {
      margin-top: px2rem(28);

      @include small {
        margin-top: px2rem(32);
      }

      @include large {
        margin-top: px2rem(44);
      }

      @include xl {
        margin-top: px2rem(52);
      }

      @include xxxl {
        margin-top: space(4.5);
      }
    }
  }

  @if $bottom {
    @if $padding {
      padding-bottom: px2rem(28);

      @include small {
        padding-bottom: px2rem(32);
      }

      @include large {
        padding-bottom: px2rem(44);
      }

      @include xl {
        padding-bottom: px2rem(52);
      }

      @include xxxl {
        padding-bottom: space(4.5);
      }
    } @else {
      margin-bottom: px2rem(28);

      @include small {
        margin-bottom: px2rem(32);
      }

      @include large {
        margin-bottom: px2rem(44);
      }

      @include xl {
        margin-bottom: px2rem(52);
      }

      @include xxxl {
        margin-bottom: space(4.5);
      }
    }
  }
}

@mixin macro-spacing-inline {
  padding-left: space(1.5);
  padding-right: space(1.5);

  @include small {
    padding-left: space(2);
    padding-right: space(2);
  }

  @include large {
    padding-left: space(3);
    padding-right: space(3);
  }

  @include xl {
    padding-left: space(4.5);
    padding-right: space(4.5);
  }
}
