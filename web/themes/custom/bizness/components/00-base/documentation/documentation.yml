docs_definition_items:
  - accordion_item__heading: Color definition
    accordion_item__description: "To use the colors defined in the theme, you can use the 'clr' function. The <span class='first-param--anchor'>first parameter</span> of this function is the color name, and the <span class='second-param--anchor'>second parameter</span> is the variant of that color, as shown below: <p><code>background-color: clr(<span class='first-param'>primary</span>, <span class='second-param'>800</span>);</code></p>"
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of colors'
      url: '/?path=/story/base-colors--palettes'
  - accordion_item__heading: Gradients definition
    accordion_item__description: "To use the gradients defined in the theme, you can use the 'gradient' function. The <span class='first-param--anchor'>first parameter</span> of this function is the color name, the <span class='second-param--anchor'>second parameter</span> is the initial variant, and the <span class='third-param--anchor'>third parameter</span> is the final variant, as shown below: <p><code>@include gradient(<span class='first-param'>primary-dark</span>, <span class='second-param'>1000</span>, <span class='third-param'>950</span>);</code></p>"
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of gradients'
      url: '/?path=/story/base-colors--gradients'
  - accordion_item__heading: Breakpoints definition
    accordion_item__description: "To see the details of the breakpoints defined in the theme, you can access the link at the bottom of this section. Below is an example of how these functions should be used.<pre><code>@include <select name='breakpoints-select'><option value='small'>small</option><option value='medium'>medium</option><option value='large'>large</option><option value='xl'>xl</option><option value='xxl'>xxl</option><option value='xxxl'>xxxl</option></select> {<br>&nbsp;&nbsp;padding-bottom: 0;<br>}</code></pre>"
    accordion_item__modifiers:
    - breakpoints
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of breakpoints'
      url: '/?path=/story/base-breakpoints--breakpoints'
    accordion_item__has_image: true
  - accordion_item__heading: Spacing definition
    accordion_item__description: "To use the spaces defined in the theme, you can use the 'space' function. This function takes a <span class='first-param--anchor'>single parameter</span>, which corresponds to a value in rem, as shown below: <p><code>margin-bottom: space(<span class='first-param'>2.5</span>);</code></p>"
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of spacings'
      url: '/?path=/story/base-spacing--spacing'
docs_typography_items:
  - accordion_item__heading: Using theme headers
    accordion_item__description: "To use the headers, we must include the header component as shown below:<pre><code>{% include '@atoms/text/headings/_heading.twig' with {<br>&nbsp;&nbsp;heading_level: <span class='third-param'>2</span>,<br>&nbsp;&nbsp;heading: 'Landing Page Title',<br>&nbsp;&nbsp;heading_modifiers: [<span class='first-param'>'xl'</span>, <span class='second-param'>'decorated'</span>]<br>} %}</code></pre>The variable <span class='third-param--anchor'>heading_level</span> corresponds to the heading number (&lt;h1&gt; to &lt;h6&gt;).<br> The heading size can be changed by replacing the <span class='first-param--anchor'>first modifier</span> with the new size (xs to 3xl). Additionally, the <span class='second-param--anchor'>decorated</span> modifier can be added for headers that require a red border at the top. <p>In Figma, you can find the heading size that should be implemented in each component.</p><img class='image' src='/screenshots/heading-size.png'>"
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of headings'
      url: '/?path=/story/atoms-text--headings'
    accordion_item__has_image: true
  - accordion_item__heading: Using theme texts
    accordion_item__description: "To use the texts defined in the theme, we must include the text component, as shown below:<pre><code>{% include '@atoms/text/text/01-paragraph.twig' with {<br>&nbsp;&nbsp;paragraph_modifiers: [<span class='first-param'>'lg'</span>],<br>&nbsp;&nbsp;paragraph_base_class: <span class='second-param'>'label'</span>,<br>&nbsp;&nbsp;paragraph_content: accordion_item__heading,<br>} %}</code></pre>The size of the text can be changed by replacing the <span class='first-param--anchor'>first modifier</span> with the new size (xs to 2xl).<p>In addition, we can send the variable <span class='second-param--anchor'>paragraph_base_class</span> to display the type of text defined in Figma (body, info or label). To display 'body' type texts, it is not necessary to define this variable.</p><img class='image' src='/screenshots/text-size.png'>"
    accordion_item__has_link: true
    accordion_item__link:
      text: 'See the list of texts'
      url: '/?path=/story/atoms-text--paragraph'
    accordion_item__has_image: true
docs_layout_items:
  - accordion_item__heading: Using vertical & horizontal spacing
    accordion_item__description: "To use the vertical and horizontal spacing defined for the sections of the theme, you can include the 'sectional-spacing' mixin, as shown below:<pre><code>.selector {<br>&nbsp;&nbsp;@include sectional-spacing;<br>}</code></pre>"
  - accordion_item__heading: Using grid layout
    accordion_item__description: "To use the grid layout using a sidebar, we can include the default template of the theme, as shown below:<pre><code>{% embed '@templates/_default.twig' with {<br>&nbsp;&nbsp;has_sidebar: true,<br>} %}<br>&nbsp;&nbsp;{% block section_content %}<br>&nbsp;&nbsp;&nbsp;&nbsp;insert content here<br>&nbsp;&nbsp;{% endblock %}<br>&nbsp;&nbsp;{% block section_sidebar %}<br>&nbsp;&nbsp;&nbsp;&nbsp;insert content here<br>&nbsp;&nbsp;{% endblock %}<br>{% endembed %}</code></pre>To use the grid layout without a sidebar, you should use it in this way:<pre><code>{% embed '@templates/_default.twig' } %}<br>&nbsp;&nbsp;{% block section_content %}<br>&nbsp;&nbsp;&nbsp;&nbsp;insert content here<br>&nbsp;&nbsp;{% endblock %}<br>{% endembed %}</code></pre>You can also use this functionality through classes as shown below:<pre><code>&lt;div class=’section’&gt;<br>&nbsp;&nbsp;&lt;div class=’section__content’&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;insert content here<br>&nbsp;&nbsp;&lt;/div&gt;<br>&nbsp;&nbsp;&lt;div class=’section__sidebar’&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;insert content here<br>&nbsp;&nbsp;&lt;/div&gt;<br>&lt;/div&gt;</code></pre>"
